{"ast":null,"code":"var _jsxFileName = \"/Users/tjaddams/Downloads/apollo-music-share/src/components/QueuedSongList.js\";\nimport React from \"react\";\nimport { Typography, Avatar, IconButton, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\n\nfunction QueuedSongList({\n  queue\n}) {\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up(\"md\")); // const song = {\n  //   title: \"LÜNE\",\n  //   artist: \"MÖÖN\",\n  //   thumbnail: \"http://img.youtube.com/vi/--ZtUFsIgMk/0.jpg\"\n  // }\n\n  return greaterThanMd && React.createElement(\"div\", {\n    style: {\n      margin: \"10px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"QUEUE (\", queue.length, \")\"), queue.map(song => React.createElement(QueuedSong, {\n    key: song.id,\n    song: song,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n}\n\nconst useStyles = makeStyles({\n  avatar: {\n    width: 44,\n    height: 44\n  },\n  text: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  container: {\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    gridTemplateColumns: \"50px auto 50px\",\n    gridGap: 12,\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  songInfoContainer: {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\"\n  }\n});\n\nfunction QueuedSong({\n  song\n}) {\n  const classes = useStyles();\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: data => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\n    }\n  });\n  const {\n    thumbnail,\n    artist,\n    title\n  } = song;\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: {\n        input: { ...song,\n          __typename: \"Song\"\n        }\n      }\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: thumbnail,\n    alt: \"Song thumbnail\",\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.songInfoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body2\",\n    className: classes.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, artist)), React.createElement(IconButton, {\n    onClick: handleAddOrRemoveFromQueue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Delete, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })));\n}\n\nexport default QueuedSongList;","map":{"version":3,"sources":["/Users/tjaddams/Downloads/apollo-music-share/src/components/QueuedSongList.js"],"names":["React","Typography","Avatar","IconButton","makeStyles","useMediaQuery","Delete","useMutation","ADD_OR_REMOVE_FROM_QUEUE","QueuedSongList","queue","greaterThanMd","theme","breakpoints","up","margin","length","map","song","id","useStyles","avatar","width","height","text","textOverflow","overflow","container","display","gridAutoFlow","gridTemplateColumns","gridGap","alignItems","marginTop","songInfoContainer","whiteSpace","QueuedSong","classes","addOrRemoveFromQueue","onCompleted","data","localStorage","setItem","JSON","stringify","thumbnail","artist","title","handleAddOrRemoveFromQueue","variables","input","__typename"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  Typography,\n  Avatar,\n  IconButton,\n  makeStyles,\n  useMediaQuery\n} from \"@material-ui/core\"\nimport { Delete } from \"@material-ui/icons\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\"\n\nfunction QueuedSongList({ queue }) {\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up(\"md\"))\n\n  // const song = {\n  //   title: \"LÜNE\",\n  //   artist: \"MÖÖN\",\n  //   thumbnail: \"http://img.youtube.com/vi/--ZtUFsIgMk/0.jpg\"\n  // }\n\n  return (\n    greaterThanMd && (\n      <div style={{ margin: \"10px 0\" }}>\n        <Typography color=\"textSecondary\" variant=\"button\">\n          QUEUE ({queue.length})\n        </Typography>\n        {queue.map(song => (\n          <QueuedSong key={song.id} song={song} />\n        ))}\n      </div>\n    )\n  )\n}\n\nconst useStyles = makeStyles({\n  avatar: {\n    width: 44,\n    height: 44\n  },\n  text: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  container: {\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    gridTemplateColumns: \"50px auto 50px\",\n    gridGap: 12,\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  songInfoContainer: {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\"\n  }\n})\n\nfunction QueuedSong({ song }) {\n  const classes = useStyles()\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: data => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue))\n    }\n  })\n  const { thumbnail, artist, title } = song\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: \"Song\" } }\n    })\n  }\n\n  return (\n    <div className={classes.container}>\n      <Avatar src={thumbnail} alt=\"Song thumbnail\" className={classes.avatar} />\n      <div className={classes.songInfoContainer}>\n        <Typography variant=\"subtitle2\" className={classes.text}>\n          {title}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n          className={classes.text}\n        >\n          {artist}\n        </Typography>\n      </div>\n      <IconButton onClick={handleAddOrRemoveFromQueue}>\n        <Delete color=\"error\" />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default QueuedSongList\n"]},"metadata":{},"sourceType":"module"}