{"ast":null,"code":"var _jsxFileName = \"/Users/tjaddams/Downloads/apollo-music-share/src/components/SongPlayer.js\";\nimport React from \"react\";\nimport QueuedSongList from \"./QueuedSongList\";\nimport { Card, CardContent, Typography, IconButton, Slider, CardMedia, makeStyles } from \"@material-ui/core\";\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from \"@material-ui/icons\";\nimport { SongContext } from \"../App\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\";\nimport ReactPlayer from \"react-player\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0px 15px\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  thumbnail: {\n    width: 150\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  playIcon: {\n    height: 38,\n    width: 38\n  }\n}));\n\nfunction SongPlayer() {\n  const {\n    data\n  } = useQuery(GET_QUEUED_SONGS);\n  const reactPlayerRef = React.useRef();\n  const {\n    state,\n    dispatch\n  } = React.useContext(SongContext);\n  const [played, setPlayed] = React.useState(0);\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\n  const [seeking, setSeeking] = React.useState(false);\n  const [positionInQueue, setPositionInQueue] = React.useState(0);\n  const classes = useStyles();\n  React.useEffect(() => {\n    const songIndex = data.queue.findIndex(song => song.id === state.song.id);\n    setPositionInQueue(songIndex);\n  }, [data.queue, state.song.id]);\n  React.useEffect(() => {\n    const nextSong = data.queue[positionInQueue + 1];\n\n    if (played >= 0.99 && nextSong) {\n      setPlayed(0);\n      dispatch({\n        type: \"SET_SONG\",\n        payload: {\n          song: nextSong\n        }\n      });\n    }\n  }, [data.queue, played, dispatch, positionInQueue]);\n\n  function handleTogglePlay() {\n    dispatch(state.isPlaying ? {\n      type: \"PAUSE_SONG\"\n    } : {\n      type: \"PLAY_SONG\"\n    });\n  }\n\n  function handleProgressChange(event, newValue) {\n    setPlayed(newValue);\n  }\n\n  function handleSeekMouseDown() {\n    setSeeking(true);\n  }\n\n  function handleSeekMouseUp() {\n    setSeeking(false);\n    reactPlayerRef.current.seekTo(played);\n  }\n\n  function formatDuration(seconds) {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  }\n\n  function handlePlayNextSong() {\n    const nextSong = data.queue[positionInQueue + 1];\n\n    if (nextSong) {\n      dispatch({\n        type: \"SET_SONG\",\n        payload: {\n          song: nextSong\n        }\n      });\n    }\n  }\n\n  function handlePlayPrevSong() {\n    const prevSong = data.queue[positionInQueue - 1];\n\n    if (prevSong) {\n      dispatch({\n        type: \"SET_SONG\",\n        payload: {\n          song: prevSong\n        }\n      });\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Card, {\n    variant: \"outlined\",\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, state.song.title), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, state.song.artist)), React.createElement(\"div\", {\n    className: classes.controls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handlePlayPrevSong,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(SkipPrevious, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleTogglePlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, state.isPlaying ? React.createElement(Pause, {\n    className: classes.playIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }) : React.createElement(PlayArrow, {\n    className: classes.playIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handlePlayNextSong,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(SkipNext, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, formatDuration(playedSeconds))), React.createElement(Slider, {\n    onMouseDown: handleSeekMouseDown,\n    onMouseUp: handleSeekMouseUp,\n    onChange: handleProgressChange,\n    value: played,\n    type: \"range\",\n    min: 0,\n    max: 1,\n    step: 0.01,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(ReactPlayer, {\n    ref: reactPlayerRef,\n    onProgress: ({\n      played,\n      playedSeconds\n    }) => {\n      if (!seeking) {\n        setPlayed(played);\n        setPlayedSeconds(playedSeconds);\n      }\n    },\n    url: state.song.url,\n    playing: state.isPlaying,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(CardMedia, {\n    className: classes.thumbnail,\n    image: state.song.thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), React.createElement(QueuedSongList, {\n    queue: data.queue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }));\n}\n\nexport default SongPlayer;","map":{"version":3,"sources":["/Users/tjaddams/Downloads/apollo-music-share/src/components/SongPlayer.js"],"names":["React","QueuedSongList","Card","CardContent","Typography","IconButton","Slider","CardMedia","makeStyles","SkipPrevious","PlayArrow","SkipNext","Pause","SongContext","useQuery","GET_QUEUED_SONGS","ReactPlayer","useStyles","theme","container","display","justifyContent","details","flexDirection","padding","content","flex","thumbnail","width","controls","alignItems","paddingLeft","spacing","paddingRight","playIcon","height","SongPlayer","data","reactPlayerRef","useRef","state","dispatch","useContext","played","setPlayed","useState","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPositionInQueue","classes","useEffect","songIndex","queue","findIndex","song","id","nextSong","type","payload","handleTogglePlay","isPlaying","handleProgressChange","event","newValue","handleSeekMouseDown","handleSeekMouseUp","current","seekTo","formatDuration","seconds","Date","toISOString","substr","handlePlayNextSong","handlePlayPrevSong","prevSong","title","artist","url"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport QueuedSongList from \"./QueuedSongList\"\nimport {\n  Card,\n  CardContent,\n  Typography,\n  IconButton,\n  Slider,\n  CardMedia,\n  makeStyles\n} from \"@material-ui/core\"\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from \"@material-ui/icons\"\nimport { SongContext } from \"../App\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\"\nimport ReactPlayer from \"react-player\"\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0px 15px\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  thumbnail: {\n    width: 150\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  playIcon: {\n    height: 38,\n    width: 38\n  }\n}))\n\nfunction SongPlayer() {\n  const { data } = useQuery(GET_QUEUED_SONGS)\n  const reactPlayerRef = React.useRef()\n  const { state, dispatch } = React.useContext(SongContext)\n  const [played, setPlayed] = React.useState(0)\n  const [playedSeconds, setPlayedSeconds] = React.useState(0)\n  const [seeking, setSeeking] = React.useState(false)\n  const [positionInQueue, setPositionInQueue] = React.useState(0)\n  const classes = useStyles()\n\n  React.useEffect(() => {\n    const songIndex = data.queue.findIndex(song => song.id === state.song.id)\n    setPositionInQueue(songIndex)\n  }, [data.queue, state.song.id])\n\n  React.useEffect(() => {\n    const nextSong = data.queue[positionInQueue + 1]\n    if (played >= 0.99 && nextSong) {\n      setPlayed(0)\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } })\n    }\n  }, [data.queue, played, dispatch, positionInQueue])\n\n  function handleTogglePlay() {\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" })\n  }\n\n  function handleProgressChange(event, newValue) {\n    setPlayed(newValue)\n  }\n\n  function handleSeekMouseDown() {\n    setSeeking(true)\n  }\n\n  function handleSeekMouseUp() {\n    setSeeking(false)\n    reactPlayerRef.current.seekTo(played)\n  }\n\n  function formatDuration(seconds) {\n    return new Date(seconds * 1000).toISOString().substr(11, 8)\n  }\n\n  function handlePlayNextSong() {\n    const nextSong = data.queue[positionInQueue + 1]\n    if (nextSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } })\n    }\n  }\n\n  function handlePlayPrevSong() {\n    const prevSong = data.queue[positionInQueue - 1]\n    if (prevSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } })\n    }\n  }\n\n  return (\n    <>\n      <Card variant=\"outlined\" className={classes.container}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography variant=\"h5\" component=\"h3\">\n              {state.song.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {state.song.artist}\n            </Typography>\n          </CardContent>\n          <div className={classes.controls}>\n            <IconButton onClick={handlePlayPrevSong}>\n              <SkipPrevious />\n            </IconButton>\n            <IconButton onClick={handleTogglePlay}>\n              {state.isPlaying ? (\n                <Pause className={classes.playIcon} />\n              ) : (\n                <PlayArrow className={classes.playIcon} />\n              )}\n            </IconButton>\n            <IconButton onClick={handlePlayNextSong}>\n              <SkipNext />\n            </IconButton>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {formatDuration(playedSeconds)}\n            </Typography>\n          </div>\n          <Slider\n            onMouseDown={handleSeekMouseDown}\n            onMouseUp={handleSeekMouseUp}\n            onChange={handleProgressChange}\n            value={played}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </div>\n        <ReactPlayer\n          ref={reactPlayerRef}\n          onProgress={({ played, playedSeconds }) => {\n            if (!seeking) {\n              setPlayed(played)\n              setPlayedSeconds(playedSeconds)\n            }\n          }}\n          url={state.song.url}\n          playing={state.isPlaying}\n          hidden\n        />\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\n      </Card>\n      <QueuedSongList queue={data.queue} />\n    </>\n  )\n}\n\nexport default SongPlayer\n"]},"metadata":{},"sourceType":"module"}