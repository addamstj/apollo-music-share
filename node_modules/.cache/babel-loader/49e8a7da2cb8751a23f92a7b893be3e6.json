{"ast":null,"code":"var _jsxFileName = \"/Users/tjaddams/Downloads/apollo-music-share/src/components/SongList.js\";\nimport React from \"react\";\nimport { CircularProgress, Card, CardMedia, CardContent, Typography, CardActions, IconButton, makeStyles } from \"@material-ui/core\";\nimport { PlayArrow, Save, Pause } from \"@material-ui/icons\";\nimport { useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\nimport { SongContext } from \"../App\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\n\nfunction SongList() {\n  const {\n    data,\n    loading,\n    error\n  } = useSubscription(GET_SONGS); // const song = {\n  //   title: \"LÜNE\",\n  //   artist: \"MÖÖN\",\n  //   thumbnail: \"http://img.youtube.com/vi/--ZtUFsIgMk/0.jpg\"\n  // }\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        marginTop: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Error fetching songs\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, data.songs.map(song => React.createElement(Song, {\n    key: song.id,\n    song: song,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: theme.spacing(3)\n  },\n  songInfoContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  songInfo: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  thumbnail: {\n    objectFit: \"cover\",\n    width: 140,\n    height: 140\n  }\n}));\n\nfunction Song({\n  song\n}) {\n  const {\n    id\n  } = song;\n  const classes = useStyles();\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: data => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\n    }\n  });\n  const {\n    state,\n    dispatch\n  } = React.useContext(SongContext);\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  const {\n    title,\n    artist,\n    thumbnail\n  } = song;\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying);\n  }, [id, state.song.id, state.isPlaying]);\n\n  function handleTogglePlay() {\n    dispatch({\n      type: \"SET_SONG\",\n      payload: {\n        song\n      }\n    });\n    dispatch(state.isPlaying ? {\n      type: \"PAUSE_SONG\"\n    } : {\n      type: \"PLAY_SONG\"\n    });\n  }\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: {\n        input: { ...song,\n          __typename: \"Song\"\n        }\n      }\n    });\n  }\n\n  return React.createElement(Card, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.songInfoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    image: thumbnail,\n    className: classes.thumbnail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.songInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    variant: \"body1\",\n    component: \"p\",\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, artist)), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleTogglePlay,\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, currentSongPlaying ? React.createElement(Pause, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : React.createElement(PlayArrow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleAddOrRemoveFromQueue,\n    size: \"small\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Save, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))))));\n}\n\nexport default SongList;","map":{"version":3,"sources":["/Users/tjaddams/Downloads/apollo-music-share/src/components/SongList.js"],"names":["React","CircularProgress","Card","CardMedia","CardContent","Typography","CardActions","IconButton","makeStyles","PlayArrow","Save","Pause","useMutation","useSubscription","GET_SONGS","SongContext","ADD_OR_REMOVE_FROM_QUEUE","SongList","data","loading","error","display","flexDirection","alignItems","marginTop","songs","map","song","id","useStyles","theme","container","margin","spacing","songInfoContainer","songInfo","width","justifyContent","thumbnail","objectFit","height","Song","classes","addOrRemoveFromQueue","onCompleted","localStorage","setItem","JSON","stringify","state","dispatch","useContext","currentSongPlaying","setCurrentSongPlaying","useState","title","artist","useEffect","isSongPlaying","isPlaying","handleTogglePlay","type","payload","handleAddOrRemoveFromQueue","variables","input","__typename"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  CircularProgress,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  IconButton,\n  makeStyles\n} from \"@material-ui/core\"\nimport { PlayArrow, Save, Pause } from \"@material-ui/icons\"\nimport { useMutation, useSubscription } from \"@apollo/react-hooks\"\nimport { GET_SONGS } from \"../graphql/subscriptions\"\nimport { SongContext } from \"../App\"\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\"\n\nfunction SongList() {\n  const { data, loading, error } = useSubscription(GET_SONGS)\n\n  // const song = {\n  //   title: \"LÜNE\",\n  //   artist: \"MÖÖN\",\n  //   thumbnail: \"http://img.youtube.com/vi/--ZtUFsIgMk/0.jpg\"\n  // }\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: 50\n        }}\n      >\n        <CircularProgress />\n      </div>\n    )\n  }\n  if (error) return <div>Error fetching songs</div>\n\n  return (\n    <div>\n      {data.songs.map(song => (\n        <Song key={song.id} song={song} />\n      ))}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: theme.spacing(3)\n  },\n  songInfoContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  songInfo: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  thumbnail: {\n    objectFit: \"cover\",\n    width: 140,\n    height: 140\n  }\n}))\n\nfunction Song({ song }) {\n  const { id } = song\n  const classes = useStyles()\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: data => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue))\n    }\n  })\n  const { state, dispatch } = React.useContext(SongContext)\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false)\n  const { title, artist, thumbnail } = song\n\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id\n    setCurrentSongPlaying(isSongPlaying)\n  }, [id, state.song.id, state.isPlaying])\n\n  function handleTogglePlay() {\n    dispatch({ type: \"SET_SONG\", payload: { song } })\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" })\n  }\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: \"Song\" } }\n    })\n  }\n\n  return (\n    <Card className={classes.container}>\n      <div className={classes.songInfoContainer}>\n        <CardMedia image={thumbnail} className={classes.thumbnail} />\n        <div className={classes.songInfo}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n              {artist}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\n              {currentSongPlaying ? <Pause /> : <PlayArrow />}\n            </IconButton>\n            <IconButton\n              onClick={handleAddOrRemoveFromQueue}\n              size=\"small\"\n              color=\"secondary\"\n            >\n              <Save />\n            </IconButton>\n          </CardActions>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\nexport default SongList\n"]},"metadata":{},"sourceType":"module"}